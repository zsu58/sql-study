/*
[DBMS와 버퍼]

1. 공짜 밥은 존재할까?
* 컴퓨터의 세상에서는 속도와 데이터의 영속적인 저장 사이의 트레이드오프가 존재할 수 밖에 없음

2. DBMS와 기억장치의 관계
* 하드디스크(HDD)
    * DBMS가 데이터를 저장하는 매체는 현대 대부분 HDD임
* 메모리
    * HDD에 비하여 굉장히 비쌈
* 버퍼(캐시)를 활용한 속도 향상
    * 자주 사용되는 데이터를 메모리에 올려 성능 향상을 꾀함
    * 왜냐하면 일반적인 SQL 구문의 경우 실행 시간 대부분을 저장소 I/O(입출력)에 사용하기 때문

3. 메모리 위에 있는 두 개의 버퍼
* DBMS가 데이터 유지를 위해 사용하는 메모리는 다음과 같이 두 종류
    * 데이터 캐시
        * 디스크에 있는 데이터의 일부를 메모리에 유지하기 위해 사용하는 메모리 영역
    * 로그 버퍼
        * 로그 버퍼는 갱신처리(INSERT, DELETE, UPDATE, MERGE)와 관련
        * DBMS는 갱신과 관련된 SQL문을 받으면 로그 버퍼 위에 변경 정보를 보낸 후 이후 디스크에 변경을 수행
            * 시점의 차이가 존재하기에 비동기 처리임
            * 비동기 처리를 하는 이유는 I/O가 시간이 많이 드는 작업이기 때문

* Postgres
    * 데이터 캐시
        * 명칭: 공유 버퍼
        * 매개변수: share_buffers
        * 초깃값: 128MB
        * 설정값 확인 명령어: show shared_buffers;
    * 로그 버퍼
        * 명칭: 트랜잭션 로그 버퍼
        * 매개변수: wal_buffers
        * 초깃값: 64KB
    * 로그
        * 설정값 확인: show wal_buffers;

4. 메모리의 성질이 초래하는 트레이드오프
* 휘발성: 하드웨어의 전원이 꺼지면 메모리의 모든 데이터는 사라짐
    * 휘발성은 데이터 부정합을 발생시켜 문제가 됨(e.g. 은행 송금 데이터)
    * 이러한 문제를 해결하고자 DBMS는 커밋 시점에 반드시 갱신 정보를 로그파일에 씀
    * 커밋은 갱신 처리를 확정하며, DBMSsㅡㄴ 커밋된 데이터를 영속화함

5. 시스템 특성에 따른 트레이드오프
* 데이터 캐시와 로그 버퍼의 크기
    * 기본적으로 DBMS는 검색을 메인으로 처리한다고 가정하기에 데이터 캐시에 더 많은 메모리가 기본적으로 할당된 것임
    * 하드웨어 사양과 수행 기능을 고려하여 설정(튜닝)이 필요함

6. 추가적인 메모리 영역 '워킹 메모리'
* 워킹 메모리: 정렬 또는 해시 관련 처리에 사용되는 작업용 영역(종료되면 해제됨)
* 만약 이 영역이 다루려는 데이터양보다 작아지는 경우 OS에서의 스왑과 같은 현상이 일어나 성능에 영향을 미침

* Postgres
    * 명칭: 워크 버퍼
    * 매개변수: work_mem
    * 기본값: 8MB
    * swap이 일어나는 여역: pgsql_tmp
*/